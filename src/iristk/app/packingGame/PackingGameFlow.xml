<?xml version="1.0" encoding="utf-8"?>
<flow name="PackingGameFlow" package="iristk.app.packingGame" 
	initial="Idle" xmlns:this="iristk.app.packingGame.PackingGameFlow" xmlns="iristk.flow" 
	xmlns:p="iristk.flow.param" xmlns:agent="iristk.situated.SystemAgentFlow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="iristk.flow flow.xsd iristk.situated.SystemAgentFlow SystemAgentFlow.xsd">
	
<!-- 	<import class="java.util.List"/> -->
	<import class="java.util.LinkedList"/>
	<import class="javafx.util.Pair"/>
	<import class="java.util.Iterator"/>
	
 	<param name="agent" type="iristk.situated.SystemAgentFlow"/>
	<param name="packables" type="PackablesMap"/>
	
	<var name="system" type="iristk.situated.SystemAgent" value="agent.getSystemAgent()"/> 

	<var name="packingList" type="LinkedList&lt;String&gt;" value = "new java.util.LinkedList&lt;String&gt;()"/>
	
<!-- 	<var name="packables" type="TreeSet&lt;String &gt;" value="new java.util.TreeSet&lt;String&gt;()"/> -->
	
	
	<state id="Idle" extends="Dialog">
		<onentry>
			<if cond="system.hasUsers()">
				<agent:attendRandom/>
				<goto state="Greeting"/>
			<else/>
				<agent:attendNobody/>
			</if>
		</onentry>
		<onevent name="sense.user.enter">
			<agent:attend target="event:user"/>
			<goto state="Greeting"/>
		</onevent>
	</state>
	
	<state id="Greeting" extends="Dialog">
		<onentry>
			<random>
				<agent:say gesture="'smile'">Greetings! Do you want to play with me?</agent:say>
				<agent:say gesture="'smile'">Hi. I am Furhat! Let's play a game.</agent:say>
				<agent:say gesture="'smile'">Hey there! Let's play a game.</agent:say>
			</random>
			<goto state="ExplainGame"/>
		</onentry>
	</state>
	

		<state id="ExplainGame" extends="Dialog">
		<onentry>
			<agent:say>I am going on holidays. I need to pack some stuff. Do you want to help?</agent:say>
			<goto state="PackIntro"/>
		</onentry>
<!-- 		<onevent name="sense.user.speak" cond="event?:sem:yes">
			<agent:say>Okay, let's play</agent:say>
			<goto state="PackIntro"/>
		</onevent> 
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<agent:say>Okay, goodbye</agent:say>
			<goto state="Idle"/>
		</onevent>	 -->
	</state>
	
	<state id="PackIntro" extends="Dialog">
		<var name="randomPackable" type="Pair&lt;String,String&gt;" value="packables.getRandom()"></var>
		<onentry>
			<agent:say>I pack my bag and I take with me:
				<expr>randomPackable.getValue()</expr>
			</agent:say>
			<exec>packingList.add(randomPackable.getKey())</exec>
			<random>
				<agent:say>Your turn</agent:say>
				<agent:say>Now you</agent:say>
				<agent:say>It's your turn</agent:say>
			</random>
			<exec>System.out.println("Packing list contains: " + packingList)</exec>
 			<goto state="PlayerPacks" />
		</onentry>
	</state>
	
	<state id="PlayerPacks" extends="Dialog">
		<var name="packingListIterator" type="Iterator" value="packingList.descendingIterator()" />
		
		<onentry> 
			<agent:listen/>
		</onentry>
		
		<onevent name="sense.user.speak" cond="event?:sem:packables">
			<var name="response" type="String" value="asString(event:sem:packables)"/>
			<var name="firstInList" type="String" value="packingListIterator.next()" />
			
			<!-- check to see if the items the player mentions are already in the list -->
			<if cond="!(firstInList.equals(response))">
				<exec>System.out.println("This item is not in the packing list")</exec>
				<agent:say><expr>response</expr>is not in the packing list</agent:say>
				
				<reentry/>
			
			<elseif cond="firstInList.equals(response)"/>
				<exec>System.out.println(response +" is in the packing list")</exec>
				<agent:say><expr>response</expr>is correct</agent:say>
				<reentry/>
			</if>
			
			
			
			
		</onevent>
	</state>

	
	<state id="CheckAgain" extends="Dialog">
		<onentry>
			<agent:say>Do you want to play again?</agent:say>
			<agent:listen/>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:yes">
			<agent:say>Okay, let's play again.</agent:say>
			<goto state="PackIntro"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<agent:say>Okay, goodbye</agent:say>
			<goto state="Idle"/>
		</onevent>		
	</state>
	
	<state id="Dialog">
		<onevent name="sense.user.speech.start" cond="system.isAttending(event) and eq(event:speakers, 1)">
			<agent:gesture name="'smile'"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:stop">
			<agent:say>
				Goodbye
			</agent:say>
			<exec>System.exit(0)</exec>
		</onevent>
		<onevent name="sense.user.speak">
			<agent:say>Sorry, I didn't get that.</agent:say>
			<reentry/>
		</onevent>
		<onevent name="sense.user.speak.side">
			<agent:attendOther mode="'eyes'" />
			<agent:say>I didn't ask you.</agent:say>
			<agent:attendOther mode="'eyes'" />
			<reentry/>
		</onevent>
		<onevent name="sense.user.speak.multi">
			<agent:say>Don't speak at the same time.</agent:say>
			<reentry/>
		</onevent>
		<onevent name="sense.user.silence">
			<agent:say>Sorry, I didn't hear anything.</agent:say>
			<reentry/>
		</onevent>
		<onevent name="sense.user.leave" cond="system.isAttending(event)">
			<if cond="system.hasUsers()">
				<agent:attendRandom/>
				<!-- <goto state="Guess" /> -->
			<else />
				<goto state="Idle"/>
			</if>
		</onevent>
		<onevent name="repeat">
			<reentry/>
		</onevent>
	</state>
	
</flow>